-------------------------------------------------------------------------------------------
---------------------------------INDEPENDENT INSTITUTE OF EDUCATION------------------------
-------------------------------------------------------------------------------------------
								-------DATA6212 TESTA 2017-------
								-------CREATED ON 20170511-------

CREATE DATABASE TRACKS;

--HIGHLIGHT AND EXECUTE UNDER MASTER TO CREATE THE DATABASE
BEGIN TRAN
------------------------------------------------------------------------CREATES ALL TABLES
CREATE TABLE CDS
(
CD_CODE VARCHAR(5) NOT NULL PRIMARY KEY,
TITLE VARCHAR(40) NOT NULL,
ARTIST VARCHAR(40) NOT NULL,
TRACKS SMALLINT NOT NULL,
RELEASE_DATE SMALLDATETIME NOT NULL,
PRICE SMALLMONEY NOT NULL	
)

CREATE TABLE STORES
(
STORE_CODE VARCHAR(5) NOT NULL PRIMARY KEY,
STORE_NAME VARCHAR(20) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
CITY VARCHAR(20) NOT NULL
)

CREATE TABLE AVAILABILITY
(
CD_CODE VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES CDS(CD_CODE),
STORE_CODE VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES STORES(STORE_CODE),
AVAILABLE_STOCK SMALLINT NOT NULL,
PRIMARY KEY (CD_CODE, STORE_CODE)
)
------------------------------------------------------------------------INSERTS ALL DATA
INSERT INTO CDS VALUES
('CD001','Awesome 80s Collection','Various',24,'1991-01-01',99),
('CD002','Anti','Rihanna',13,'2016-02-01',183),
('CD003','Now 75','Various',22,'2017-03-01',140),
('CD004','The Afterlove','James Blunt',10,'2017-04-01',140),
('CD005','Oh My My','One Republic',16,'2016-10-01',151)

INSERT INTO STORES VALUES
('ST001','Musica','Victoria Wharf Shopping Centre','Cape Town'),
('ST002','Game', 'City View Shopping Centre','Durban'),
('ST003','Musica', 'Blue Route Mall', 'Cape Town'),
('ST004','Makro', 'Ascot Road','Johannesburg'),
('ST005','Musica','Rooihuiskraal Road', 'Pretoria')

INSERT INTO AVAILABILITY VALUES
('CD002', 'ST001',13),
('CD002', 'ST004',9),
('CD003', 'ST005',8),
('CD004', 'ST003',5),
('CD004', 'ST001',9)

COMMIT

SELECT * FROM CDS
SELECT * FROM STORES
SELECT * FROM AVAILABILITY
--AFTER YOU HAVE CREATED YOUR DATABASE HIGHLIGHT ALL THE CODE ABOVE AND EXECUTE THE CODE UNDER YOUR CREATED DATABASE

--Q1
SELECT TITLE, ARTIST FROM CDS;

--Q2
SELECT * FROM CDS WHERE TRACKS >= 20;

--Q3
SELECT TITLE, ARTIST FROM CDS 
LEFT JOIN AVAILABILITY ON CDS.CD_CODE = AVAILABILITY.CD_CODE
WHERE AVAILABILITY.STORE_CODE IS NULL;

--Q4
SELECT * FROM CDS WHERE TITLE LIKE '%collection%';

--Q5
SELECT TOP 1 STORE_NAME, ADDRESS, CITY, TITLE, ARTIST, AVAILABLE_STOCK 
FROM STORES
JOIN AVAILABILITY ON STORES.STORE_CODE = AVAILABILITY.STORE_CODE
JOIN CDS ON CDS.CD_CODE = AVAILABILITY.CD_CODE
WHERE CDS.CD_CODE = 'CD002';

--Q6
SELECT T1.TITLE, T2.TITLE,
DATEDIFF(YEAR, T2.RELEASE_DATE, T1.RELEASE_DATE) AS 'DIFF IN YEARS',
DATEDIFF(MONTH, T2.RELEASE_DATE, T1.RELEASE_DATE) AS 'DIFF IN MONTHS',
DATEDIFF(DAY, T2.RELEASE_DATE, T1.RELEASE_DATE) AS 'DIFF IN DAYS'
FROM CDS T1, CDS T2
WHERE T1.CD_CODE <> T2.CD_CODE

--Q7
ALTER TABLE CDS
ADD YEARS_AVAILABLE SMALLINT
--RUN FIRST

UPDATE CDS
SET YEARS_AVAILABLE = DATEDIFF(YEAR, RELEASE_DATE, GETDATE())
FROM CDS
SELECT * FROM CDS

--Q8
SELECT TITLE, ARTIST, SUM(AVAILABLE_STOCK) AS [TOTAL_AVAILABLE] FROM CDS
LEFT JOIN AVAILABILITY ON CDS.CD_CODE = AVAILABILITY.CD_CODE
GROUP BY CDS.TITLE, CDS.ARTIST
ORDER BY TITLE
