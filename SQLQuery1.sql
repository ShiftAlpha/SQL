--Question 1--
--CREATE DATABASE + TABLES--
create database MUSIC_COLLECTION
create table ALBUMS(ALBUM_ID VARCHAR(5) NOT NULL PRIMARY KEY,ALBUM_TITLE VARCHAR(40) NOT NULL,)create table TRACKS( TRACK_ID VARCHAR(5) NOT NULL PRIMARY KEY, TRACK_NAME VARCHAR(40) NOT NULL, TRACK_DURATION DECIMAL NOT NULL, ) create table ALBUM_TRACKS(TRACK_ID VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES
TRACKS(TRACK_ID),
ALBUM_ID VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES
ALBUMS(ALBUM_ID),
)
create table ARTISTS(ARTIST_ID VARCHAR(5) NOT NULL PRIMARY KEY,ARTIST_NAME VARCHAR(40) NOT NULL,)create table TRACK_ARTISTS(TRACK_ID VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES TRACKS(TRACK_ID),ARTIST_ID VARCHAR(5) NOT NULL FOREIGN KEY REFERENCES ARTISTS(ARTIST_ID))--Question 2----INSERT--insert into ALBUMS ( ALBUM_ID, ALBUM_TITLE)values ('AL001', 'Now That’s What I Call Music' ), ('AL002', 'Now Dance 11' )insert into TRACKS (TRACK_ID, TRACK_NAME, TRACK_DURATION) values ('TR001 ', 'Silence',3.5 ), ('TR002', 'Rain',4), ('TR003', 'Too Good At Goodbyes',4.5 ), ('TR004', 'Find You', 3.5 ), ('TR005', 'If I Could Find',2.5 ), ('TR006', 'Let Me Go Now', 3 ), ('TR007', 'Friends', 3.5 ), ('TR008', 'What About Us', 4 )insert into ALBUM_TRACKS (TRACK_ID, ALBUM_ID)values('TR001', 'AL001' ), ('TR001', 'AL002' ),('TR002', 'AL001' ), ('TR003', 'AL001' ), ('TR004', 'AL001' ), ('TR005', 'AL002' ), ('TR005', 'AL002' ), ('TR006', 'AL002' ), ('TR007', 'AL002' ),('TR008', 'AL002' )insert into ARTISTS (ARTIST_ID, ARTIST_NAME)values ('AR001','Marshmallow'),('AR002','Khalid'),('AR003','The Script'),('AR004','Sam Smith'),('AR005','Nick Jonas'),('AR006','Goldfish'),('AR007','Method'),('AR008','Justin Bieber'),('AR009','BloodPop'),('AR010','Pink'),('AR011','Elvis Presley')insert into TRACK_ARTISTS (TRACK_ID, ARTIST_ID)values ('TR001','AR001'),('TR001','AR002'),('TR002','AR003'),('TR003','AR004'),('TR004','AR005'),('TR005','AR006'),('TR006','AR007'),('TR007','AR008'),('TR007','AR009'),('TR008','AR010')--Question 3----Update--Update ARTISTS Set ARTIST_NAME = 'Marshmallow'Where ARTIST_ID = 'AR1001'--Question 4----Select--SELECT ARTIST_NAME, TRACK_NAMEFrom ARTISTS, TRACKS, TRACK_ARTISTSWhere ARTISTS.ARTIST_ID = TRACK_ARTISTS.ARTIST_ID AND TRACKS.TRACK_ID = TRACK_ARTISTS.TRACK_IDOrder By ARTIST_NAME ASC--Question 5----order by--SELECT TOP 1 ALBUM_TITLE, SUM(TRACK_DURATION) AS [ALBUM LENGTH (MINUTES)]FROM ALBUMS a	INNER JOIN ALBUM_TRACKS at ON at.ALBUM_ID = a.ALBUM_ID	INNER JOIN TRACKS t ON t.TRACK_ID = at.TRACK_IDGROUP BY ALBUM_TITLEORDER BY SUM(TRACK_DURATION) DESC--Question 6--SELECT A.ARTIST_ID, A.ARTIST_NAME
FROM ARTISTS A
LEFT JOIN TRACK_ARTISTS TA ON TA.ARTIST_ID = A.ARTIST_ID
LEFT JOIN TRACKS T ON T.TRACK_ID = TA.TRACK_ID
WHERE T.TRACK_ID IS NULL --Question 7--DELETE FROM ARTISTS
WHERE ARTIST_ID='AR011'--Question 8--SELECT T1.TRACK_NAME AS 'TRACK NAME', COUNT (*) AS 'NUMBER OF ALBUMS'
FROM TRACKS T1
INNER JOIN ALBUM_TRACKS AT ON T1.TRACK_ID = AT.TRACK_ID
WHERE T1.TRACK_NAME IN ('If I Could Find','Silence')
GROUP BY T1.TRACK_NAME, AT.TRACK_ID
HAVING COUNT(*) <=6
ORDER BY T1.TRACK_NAME ASC--Question 9--SELECT DISTINCT T1.TRACK_NAME AS 'TRACK NAME', MAX(T1.TRACK_DURATION) AS 'TRACK DURATION'
FROM TRACKS T1
INNER JOIN TRACKS T2 ON T1.TRACK_DURATION = T2.TRACK_DURATION
WHERE T1.TRACK_NAME <> T2.TRACK_NAME
GROUP BY T1.TRACK_DURATION, T1.TRACK_NAME
ORDER BY MAX(T1.TRACK_DURATION) ASC